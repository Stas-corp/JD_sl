import parsser
import botinit
import telebot
import check_products
import time

bot = botinit.bot
sch = botinit.sch

timer_schedule = 0

def check_page(mess):
    num_item_new = parsser.scraper.get_numder_items()
    num_item_last = len(check_products.get_data()[0])
    message = f'–°–µ–π—á–∞—Å –Ω–∞ —Å–∞–π—Ç–µ {num_item_new} —Ç–æ–≤–∞—Ä–æ–≤.\n–í –ø–æ—Å–ª–µ–¥–Ω–µ–º —Å–±–æ—Ä–µ –¥–∞–Ω–Ω—ã—Ö {num_item_last} —Ç–æ–≤–∞—Ä–æ–≤.'
    bot.send_message(mess.chat.id, message)

def creat_task(mess, timer):
    print(timer)
    sch.add_job(check_page, args=[mess], trigger='interval', minutes=timer, id='checker')

def stop_task(mess):
    try:
        sch.remove_job('checker')
    except:
        bot.send_message(mess.chat.id, '–ù–µ—Ç –∑–∞–¥–∞—á –¥–ª—è –æ—Ç–º–µ–Ω—ã')
        
def set_timeout(mess):
    global timer_schedule
    try:
        timer_schedule = int(mess.text)
        mrk = telebot.types.InlineKeyboardMarkup()
        button = telebot.types.InlineKeyboardButton(text = '–ó–∞–ø—É—Å—Ç–∏—Ç—å –∑–∞–¥–∞—á—É üìã', callback_data='check_page')
        mrk.add(button)
        bot.send_message(mess.chat.id, f'–ù–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!', reply_markup=mrk)
    except Exception as e:
        message = f'–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∏–∑-–∏–∑ –æ—à–∏–±–∫–∏:\n{e}'
        bot.send_message(mess.chat.id, message)
     
def main(mess):
    bot.send_message(mess.chat.id, f'–ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤.')
    if timer_schedule <= 0: 
        message = f'–ó–Ω–∞—á–µ–Ω–∏–µ timer_schedule -> {timer_schedule}.\n–ù—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∞–π–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏ –ø—Ä–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤.'
        mrk = telebot.types.InlineKeyboardMarkup()
        button = telebot.types.InlineKeyboardButton(text = '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∞–π–º–µ—Ä ‚è±', callback_data='set_timeout_checker')
        mrk.add(button)
        bot.send_message(mess.chat.id, message, reply_markup=mrk)
    else:
        creat_task(mess, timer_schedule)     