import parsser
import botinit
import asyncio
import telebot
import check_products

bot = botinit.bot

task = None
timer_for_call_parsser = 0

def parss(mess):
    if not timer_for_call_parsser:
        message = f'–¢–∞–π–º–µ—Ä —Å—Ç–æ–∏—Ç –Ω–∞ –Ω—É–ª–µ, —Å–±–æ—Ä –Ω–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—Å—è, –ø–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–Ω—Ç–µ—Ä–≤–∞–ª'
        mrk = telebot.types.InlineKeyboardMarkup()
        button = telebot.types.InlineKeyboardButton(text = '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∞–π–º–µ—Ä ‚è±', callback_data='set_timout_parsser')
        mrk.add(button)
        bot.send_message(mess.chat.id, message, reply_markup=mrk)
    else:
        asyncio.run(create_task(mess))

def set_new_timeout(mess):
    global timer_for_call_parsser
    global task
    try:
        timer_for_call_parsser = float(mess.text)
        mrk = telebot.types.InlineKeyboardMarkup()
        button = telebot.types.InlineKeyboardButton(text = '–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ü–∏–∫–ª —Å–±–æ—Ä–∞ üìã', callback_data='start_parss')
        mrk.add(button)
        bot.send_message(mess.chat.id, f'–ù–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!', reply_markup=mrk)
        if task and not task.done():
            stop_parsser(mess) 
    except Exception as e:
        message = f'–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∏–∑-–∏–∑ –æ—à–∏–±–∫–∏:\n{e}'
        bot.send_message(mess.chat.id, message)

async def call_parsser(mess, minutes:float):
    try:
        while True:
            message = '–ù–∞—á–∞–ª—Å—è —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö...\n–ü—Ä–æ—Å—å–±–∞ –Ω–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É!'
            bot.send_message(mess.chat.id, message, 'HTML')
            parsser.main()
            bot.send_message(mess.chat.id, f'–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à—ë–Ω!\n–°–ª–µ–¥—É—é—â–∏–π —Å–±–æ—Ä –±—É–¥–µ—Ç —á–µ—Ä–µ–∑ {minutes} –º–∏–Ω—É—Ç.', 'HTML')
            await asyncio.sleep(60 * minutes) # –¢–æ–ª—å–∫–æ —Ä–∞–¥–∏ —ç—Ç–æ–≥–æ –∏ –Ω—É–∂–µ–Ω –∞—Å–∏–Ω–∫....
    except asyncio.CancelledError as e:
        pass

def stop_parsser(mess):
    global task
    try:
        task.cancel()
        message = f'–¶–∏–∫–ª –ø–∞—Ä—Å–µ—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞!'
        bot.send_message(mess.chat.id, message)
    except:
        message = f'–¶–∏–∫–ª —Å–±–æ—Ä–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω!\n–ù–µ—á–µ–≥–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å!'
        bot.send_message(mess.chat.id, message)
        
async def create_task(mess):
    global task
    task = asyncio.create_task(call_parsser(mess, timer_for_call_parsser))
    await task